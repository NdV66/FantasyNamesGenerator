{"version":3,"sources":["serviceWorker.js","reduxUtils/reducers/getNameReducer.js","reduxUtils/reducers/mainReducer.js","reduxUtils/actionCreators/getNameActions.js","components/Circle.jsx","pages/Jumbotron.jsx","pages/NameGeneratorPage.jsx","reduxUtils/mapStateToProps.js","reduxUtils/mapDispatchToProps.js","pages/FooterPage.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","generatedName","mainReducer","combineReducers","getNameReducer","state","arguments","length","undefined","action","type","Object","objectSpread","event","target","value","Circle","props","react_default","a","createElement","cx","cy","r","fill","className","randomIntegerBetween","min","max","Math","floor","random","PageJumbotron","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","jumbotronRef","React","createRef","jumbotronHeight","jumbotronWidth","inherits","createClass","key","current","offsetHeight","offsetWidth","setState","circlesSettings","circlesNumber","maxX","maxY","ref","xmlns","version","_ref","renderedCircles","i","greyColor","opacity","push","Circle_Circle","toString","concat","renderCircles","Jumbotron","Component","NameGeneratorPage","_this$props","onClickGetName","handleChange","Container","fluid","id","Row","Col","md","lg","size","offset","LANG","NAME_LABEL","Input","name","placeholder","NAME_INPUT_PLACEHOLDER","onChange","Button","color","onClick","GET_NAME","connect","dispatch","onChangeNameInput","FontAwesomeIconWrapper","index_es","icon","FooterElementContainer","FooterPage_FontAwesomeIconWrapper","header","body","TextFooterElementBody","text","rel","href","linkName","aboutBody","FooterPage_TextFooterElementBody","ABOUT_URL","ABOUT_LINK","ABOUT_TEXT","myGithubBody","MY_GITUB_URL","MY_GITHUB_LINK","MY_GITHUB_TEXT","otherProjectBody","OTHER_PROJECT_URL_1","OTHER_PROJECT_LINK_1","OTHER_PROJECT_URL_2","OTHER_PROJECT_LINK_2","OTHER_PROJECT_URL_3","OTHER_PROJECT_LINK_3","FooterPage","FooterPage_FooterElementContainer","ABOUT","MY_GITHUB","OTHER_PROJECTS","App","Jumbotron_PageJumbotron","pages_NameGeneratorPage","FooterPage_FooterPage","store","createStore","library","add","faGrinBeam","faCodeBranch","faCampground","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7d17f96.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ON_CLICK_GET_NAME, ON_CHANGE_NAME_INPUT} from '../actionCreators/getNameActions';\r\n\r\nconst initialState = { generatedName: '' }\r\n\r\nexport const getNameReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ON_CLICK_GET_NAME:\r\n            return {\r\n                ...state,\r\n                generatedName: 'Keep calm, this site is in progress <3',\r\n            };\r\n        case ON_CHANGE_NAME_INPUT:\r\n            return {\r\n                ...state,\r\n                generatedName: action.event.target.value,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { getNameReducer } from './getNameReducer';\r\n\r\nexport const mainReducer = combineReducers({\r\n    getNameReducer,\r\n});\r\n","export const ON_CLICK_GET_NAME = 'ON_CLICK_GET_NAME';\r\nexport const ON_CHANGE_NAME_INPUT = 'ON_CHANGE_NAME_INPUT';\r\n\r\nexport const onClickGetName = () => ({\r\n    type: ON_CLICK_GET_NAME,\r\n});\r\n\r\nexport const onChangeNameInput = (event) => ({\r\n    type: ON_CHANGE_NAME_INPUT,\r\n    event,\r\n});\r\n","import React from 'react';\r\nimport {PropTypes} from 'prop-types';\r\n\r\nexport const Circle = (props) => <circle\r\n        cx={props.cx}\r\n        cy={props.cy}\r\n        r={props.r}\r\n        fill={props.fill}\r\n        className='fantasy-snow'\r\n    />;\r\n\r\nCircle.propTypes = {\r\n    r: PropTypes.string,\r\n    fill: PropTypes.string,\r\n    cx: PropTypes.string,\r\n    cy: PropTypes.string,\r\n};","import React from 'react';\r\nimport { Jumbotron } from 'reactstrap';\r\nimport { Circle } from '../components/Circle';\r\n\r\nconst CIRCLE_NUMBER = 40;\r\nconst MAX_CIRCLE_SIZE = 16;\r\nconst MIN_CIRCLE_SIZE = 4;\r\n\r\nconst randomIntegerBetween = (min, max) => Math.floor(Math.random() * max) + min;\r\n\r\nconst renderCircles = ({circlesNumber, maxY, maxX,}) => {\r\n    const renderedCircles = [];\r\n\r\n    for(let i = 0; i < circlesNumber; ++i) {\r\n        const greyColor = randomIntegerBetween(90, 250);\r\n        const opacity = randomIntegerBetween(0.4, 0.9);\r\n\r\n        renderedCircles.push(<Circle\r\n            r={randomIntegerBetween(MIN_CIRCLE_SIZE, MAX_CIRCLE_SIZE).toString()}\r\n            fill={`rgba(${greyColor}, ${greyColor}, ${greyColor}, ${opacity})`}\r\n            cx={randomIntegerBetween(0, maxX).toString()}\r\n            cy={(0 - MAX_CIRCLE_SIZE).toString()}\r\n            key={`circle_${i}`}\r\n        />);\r\n    }\r\n\r\n    return renderedCircles;\r\n};\r\n\r\nexport class PageJumbotron extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.jumbotronRef = React.createRef();\r\n        this.state = {\r\n            jumbotronHeight: 0,\r\n            jumbotronWidth: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        const jumbotronHeight = this.jumbotronRef.current.offsetHeight;\r\n        const jumbotronWidth = this.jumbotronRef.current.offsetWidth;\r\n        this.setState({jumbotronHeight, jumbotronWidth});\r\n    }\r\n\r\n    render() {\r\n        const circlesSettings = {\r\n            circlesNumber: CIRCLE_NUMBER,\r\n            maxX: this.state.jumbotronWidth,\r\n            maxY: this.state.jumbotronHeight,\r\n        };\r\n\r\n        return <div className='jumbotron-bg position-relative wavy-div' ref={this.jumbotronRef}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" className='jumbotron-svg'>\r\n                {renderCircles(circlesSettings)}\r\n            </svg>\r\n            <Jumbotron className='page-jumbotron text-center text-light shadow-bg mb-0'>\r\n                <h1>Fantasy names generator</h1>\r\n                <h2 className='mt-3'>beacuse we love Role Plaing Games so much!</h2>\r\n            </Jumbotron>\r\n        </div>;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Col, Input, Row, Button, Container} from 'reactstrap';\r\nimport {PropTypes} from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {mapDispatchToProps} from '../reduxUtils/mapDispatchToProps';\r\nimport {mapStateToProps} from '../reduxUtils/mapStateToProps';\r\nimport LANG from '../assets/en.json';\r\n\r\nclass NameGeneratorPage extends React.Component {\r\n    render() {\r\n        const {generatedName, onClickGetName, handleChange} = this.props;\r\n\r\n        return <Container fluid id='generator-page'>\r\n            <Row className='bg-dark pb-5 pt-5'>\r\n                <Col className=''>\r\n                    <Col md='12' lg={{size: 10, offset: 1}} className='text-center'>\r\n                        <h3>{LANG.NAME_LABEL}</h3>\r\n                        <Input\r\n                            type='text'\r\n                            name='name'\r\n                            id='name'\r\n                            placeholder={LANG.NAME_INPUT_PLACEHOLDER}\r\n                            className='mb-3 mt-3'\r\n                            value={generatedName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Button color='primary' onClick={onClickGetName}>{LANG.GET_NAME}</Button>\r\n                    </Col>\r\n                </Col>\r\n            </Row>\r\n        </Container>;\r\n    }\r\n}\r\n\r\nNameGeneratorPage.propTypes = {\r\n    generatedName: PropTypes.string,\r\n    onClickGetName: PropTypes.func,\r\n    handleChange: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NameGeneratorPage);\r\n","export const mapStateToProps = ({getNameReducer}) => ({\r\n    generatedName: getNameReducer.generatedName,\r\n});","import {onChangeNameInput, onClickGetName} from './actionCreators/getNameActions';\r\n\r\nexport const mapDispatchToProps = (dispatch) => ({\r\n    onClickGetName: () => dispatch(onClickGetName()),\r\n    handleChange: (event) => dispatch(onChangeNameInput(event)),\r\n});\r\n\r\n","import React from 'react';\r\nimport {Col, Row, Container} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {PropTypes} from 'prop-types';\r\nimport LANG from '../assets/en.json';\r\n\r\nconst URL_CONTAINER_CSS_CLASSES = 'mt-2 font-weight-normal';\r\n\r\nconst FontAwesomeIconWrapper = (props) => <FontAwesomeIcon icon={props.icon} className='fa-footer mb-2' />;\r\n\r\nFontAwesomeIconWrapper.propTypes = {\r\n    icon: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nconst FooterElementContainer = (props) => <Col md='12' lg='4'>\r\n    <Col className='text-center'>\r\n        <FontAwesomeIconWrapper icon={props.icon} />\r\n    </Col>\r\n    <Col>\r\n        <h5>{props.header}</h5>\r\n    </Col>\r\n    <Col>\r\n        {props.body}\r\n    </Col>\r\n</Col>;\r\n\r\nFooterElementContainer.propTypes = {\r\n    icon: PropTypes.string.isRequired,\r\n    header: PropTypes.string.isRequired,\r\n    body: PropTypes.element,\r\n};\r\n\r\nconst TextFooterElementBody = (props) => <div className='text-justify'>\r\n    {props.text}\r\n    <div className={URL_CONTAINER_CSS_CLASSES}>\r\n        <a target='_blank' rel='noopener noreferrer' href={props.href}>{props.linkName}</a>\r\n    </div>\r\n</div>;\r\n\r\nTextFooterElementBody.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    href: PropTypes.string.isRequired,\r\n    linkName: PropTypes.string.isRequired,\r\n};\r\n\r\nconst aboutBody = <TextFooterElementBody\r\n    href={LANG.ABOUT_URL}\r\n    linkName={LANG.ABOUT_LINK}\r\n    text={LANG.ABOUT_TEXT}\r\n/>;\r\n\r\nconst myGithubBody = <TextFooterElementBody\r\n    href={LANG.MY_GITUB_URL}\r\n    linkName={LANG.MY_GITHUB_LINK}\r\n    text={LANG.MY_GITHUB_TEXT}\r\n/>;\r\n\r\nconst otherProjectBodyHrefCssClasses = 'd-block';\r\nconst otherProjectBody = <div className={URL_CONTAINER_CSS_CLASSES}>\r\n    <a target='_blank' rel='noopener noreferrer' href={LANG.OTHER_PROJECT_URL_1} className={otherProjectBodyHrefCssClasses}>{LANG.OTHER_PROJECT_LINK_1}</a>\r\n    <a target='_blank' rel='noopener noreferrer' href={LANG.OTHER_PROJECT_URL_2} className={otherProjectBodyHrefCssClasses}>{LANG.OTHER_PROJECT_LINK_2}</a>\r\n    <a target='_blank' rel='noopener noreferrer' href={LANG.OTHER_PROJECT_URL_3} className={otherProjectBodyHrefCssClasses}>{LANG.OTHER_PROJECT_LINK_3}</a>\r\n</div>;\r\n\r\nexport const FooterPage = () => <Container fluid>\r\n    <Row className='footer pt-3 pb-2 font-weight-normal'>\r\n        <FooterElementContainer\r\n            icon='grin-beam'\r\n            header={LANG.ABOUT}\r\n            body={aboutBody}\r\n        />\r\n        <FooterElementContainer\r\n            icon='code-branch'\r\n            header={LANG.MY_GITHUB}\r\n            body={myGithubBody}\r\n        />\r\n        <FooterElementContainer\r\n            icon='campground'\r\n            header={LANG.OTHER_PROJECTS}\r\n            body={otherProjectBody}\r\n        />\r\n    </Row>\r\n</Container>;\r\n","import React from 'react';\r\nimport {PageJumbotron} from './pages/Jumbotron';\r\nimport NameGeneratorPage from './pages/NameGeneratorPage';\r\nimport {FooterPage} from './pages/FooterPage';\r\n\r\nconst App = () => <div>\r\n    <header>\r\n        <PageJumbotron />\r\n    </header>\r\n    <main>\r\n        <NameGeneratorPage />\r\n    </main>\r\n    <footer>\r\n        <FooterPage />\r\n    </footer>\r\n</div>;\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux';\r\nimport { mainReducer }from './reduxUtils/reducers/mainReducer';\r\nimport App from './App';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faGrinBeam, faCodeBranch, faCampground} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './scss/style.scss';\r\n\r\nconst store = createStore(mainReducer);\r\n\r\nlibrary.add(faGrinBeam, faCodeBranch, faCampground);\r\n\r\nReactDOM.render( <Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}